# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    webSiteProtocol: '%env(WEB_SITE_PROTOCOL)%'
    webSiteName: '%env(resolve:WEB_SITE_NAME)%'
    webSiteDomainName: '%env(resolve:WEB_SITE_DOMAIN_NAME)%'
    webSiteHomeUrl: '%env(resolve:WEB_SITE_HOME_URL)%'
    webSiteEmailAddress: '%env(resolve:WEB_SITE_EMAIL_ADDRESS)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $projectDirectory: '%kernel.project_dir%'
            $hostingDirectory: '%env(resolve:HOSTING_DIRECTORY)%'
            $quarantineDirectory: '%env(resolve:QUARANTINE_DIRECTORY)%'
            $adminPassword: '%env(resolve:ADMIN_PASSWORD)%'
            $defaultUserPassword: '%env(resolve:DEFAULT_USER_PASSWORD)%'

            $webSiteProtocol: '%webSiteProtocol%'
            $webSiteName: '%webSiteName%'
            $webSiteDomainName: '%webSiteDomainName%'
            $webSiteHomeUrl: '%webSiteHomeUrl%'
            $webSiteEmailAddress: '%webSiteEmailAddress%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones


    api.event.authentication_failure_listener:
        class: App\Subscriber\AuthenticationFailureListener
        #arguments: [Doctrine\Persistence\ManagerRegistry]
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_failure, method: onAuthenticationFailureResponse }